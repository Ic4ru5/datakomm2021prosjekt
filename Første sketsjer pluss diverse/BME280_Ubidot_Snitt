#include "UbidotsEsp32Mqtt.h"
#include <time.h>
#include <stdlib.h>
//Alt med BM280
#include <Wire.h>
#include <SPI.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>
#define SEALEVELPRESSURE_HPA (999)
// BME280 I2C address is 0x76(108)
#define Addr 0x76
Adafruit_BME280 bme; // I2C
//Slutt med BM280

/****************************************
 * Define Constants
 ****************************************/
const char *UBIDOTS_TOKEN = "BBFF-fj6fUms2Cn65pI6onX4N5oQZvtRbYe";  // Put here your Ubidots TOKEN
const char *WIFI_SSID = "Iphone exs";      // Put here your Wi-Fi SSID
const char *WIFI_PASS = "123456789";      // Put here your Wi-Fi password
const char *DEVICE_LABEL = "edvard";   // Put here your Device label to which data  will be published
const char *Temperatur = "temperatur"; // Put here your Variable label to which data  will be published
const char *Fuktighet = "fuktighet";
const char *Trykk = "trykk";
const char *Height = "height";
const int PUBLISH_FREQUENCY = 5000; // Update rate in milliseconds
const int Sensor_Reading_Frekvens = 500; //Hvor ofte man leser av sensor
//Variabler brukt for å finne snittet av 10 målinger.
float TempSnitt[10]; //an array capable of holding 10 entries numbered 0 to 9
float TrykkSnitt[10];
float FuktighetSnitt[10];
float HoydeSnitt[10];
float total = 0;   //Sum av de siste 10 målinger
float total2 = 0;
float total3 = 0;
float total4 = 0;
float Snitt = 0;  //Snittet av de siste 10 målinger
float Snitt2 = 0;
float Snitt3 = 0;
float Snitt4 = 0;
float Antall_Sample = 10;
byte arrayIndex = 0;
int BegynnPublisering = 0;
unsigned long timer;
unsigned long timer2;
Ubidots ubidots(UBIDOTS_TOKEN);

/****************************************
 * Auxiliar Functions
 ****************************************/
void callback(char *topic, byte *payload, unsigned int length)
{
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
  for (int i = 0; i < length; i++)
  {
    Serial.print((char)payload[i]);
  }
  Serial.println();
}

void Snitt_Array(){   //Funksjon for utregning av snittet
  for (int i = 0; i < 10; i++ ){
    total = total + TempSnitt[i];
    total2 = total2 + FuktighetSnitt[i];
    total3 = total3 + TrykkSnitt[i];
    total4 = total4 + HoydeSnitt[i];
  }
  Snitt = total / Antall_Sample;
  Snitt2 = total2 / Antall_Sample;
  Snitt3 = total3 / Antall_Sample;
  Snitt4 = total4 / Antall_Sample;
  total = 0;
  total2 = 0;
  total3 = 0;
  total4 = 0;
}

void UbidotPublisering() {  //Funksjon som publiserer snittet av 10 målinger til Ubidots.com
    //Temperatur
    ubidots.add(Temperatur, Snitt); // Navn på fidget i Ubidots og hvilken variabel som skal publisert
    //Fuktighet
    ubidots.add(Fuktighet, Snitt2); // Navn på fidget i Ubidots og hvilken variabel som skal publisert
    //Trykk
    ubidots.add(Trykk, Snitt3); // Navn på fidget i Ubidots og hvilken variabel som skal publisert
    //Moh    
    ubidots.add(Height, Snitt4); // Navn på fidget i Ubidots og hvilken variabel som skal publisert
    ubidots.publish(DEVICE_LABEL);  //Ubidots som det skal publiseres til
}

void printValues() {    //Funksjon som skriver verdier terminalvinduet
    Serial.print("Temperature = ");
    Serial.print(bme.readTemperature());
    Serial.println(" °C");
    Serial.print("Pressure = ");
    Serial.print(bme.readPressure() / 100.0F);
    Serial.println(" hPa");
    Serial.print("Approx. Altitude = ");
    Serial.print(bme.readAltitude(SEALEVELPRESSURE_HPA));
    Serial.println(" m");
    Serial.print("Humidity = ");
    Serial.print(bme.readHumidity());
    Serial.println(" %");
    Serial.println();
}

void setup(){
  // put your setup code here, to run once:
  Serial.begin(115200);
  srand(time(NULL));  
  //ubidots.setDebug(true);  // uncomment this to make debug messages available
  ubidots.connectToWifi(WIFI_SSID, WIFI_PASS);
  ubidots.setCallback(callback);
  ubidots.setup();
  ubidots.reconnect();
  timer = millis();
  timer2 = millis();
  bme.begin(Addr);  //BM280
}

void loop(){
  // put your main code here, to run repeatedly:
  if (!ubidots.connected()){
    ubidots.reconnect();
  }
  if (millis() - timer > Sensor_Reading_Frekvens){ // triggers the routine every 500 ms
    //Temperatur
    float value = bme.readTemperature();
    //Fuktighet
    float value2 = bme.readHumidity();
    //Trykk
    float value3 = bme.readPressure();
    //Moh    
    float value4 = bme.readAltitude(SEALEVELPRESSURE_HPA);
    //Lagring i arrays
    TempSnitt[arrayIndex] = value;  //put a value in entry 0
    FuktighetSnitt[arrayIndex] = value2;
    TrykkSnitt[arrayIndex] = value3;
    HoydeSnitt[arrayIndex] = value4;
    arrayIndex++;  //increment the array index
    if (arrayIndex >= 10) {
      arrayIndex = 0;
      BegynnPublisering = 1;
    }
      //Printe verdier i terminal
    printValues();
    Snitt_Array();  //finne snitt av rekkenee
    timer = millis(); 
  }
  if (millis() - timer2 > PUBLISH_FREQUENCY && BegynnPublisering == 1) {
    UbidotPublisering();
    timer2 = millis();
  }
  ubidots.loop();
}
